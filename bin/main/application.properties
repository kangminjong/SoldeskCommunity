spring.application.name=SoldeskCommunity

server.port=80

spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@soldeskcommunity.duckdns.org:1555:xe
spring.datasource.username=ungman
spring.datasource.password=1234

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database=oracle
spring.jpa.database-platform=org.hibernate.dialect.OracleDialect

spring.main.allow-bean-definition-overriding=true

spring.servlet.multipart.max-file-size=1000MB
spring.servlet.multipart.max-request-size=2000MB


board.img.folder = C:/uploads/board/img

board.file.folder = C:/uploads/board/file

notice.img.folder = C:/uploads/notice/img

notice.file.folder = C:/uploads/notice/file

photo.maxSize = 5242880

user.photo.folder = C:/uploads/user

dataroom.file.folder = C:/uploads/dataroom/file

file.maxSize = 31457280

# Gmail SMTP 설정
# Gmail 계정의 2단계 인증을 활성화한 후, 앱 비밀번호를 생성하여 사용하세요
# 앱 비밀번호 생성 방법: Google 계정 -> 보안 -> 2단계 인증 -> 앱 비밀번호
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=  # 본인의 Gmail 주소 입력 (예: your.email@gmail.com)
spring.mail.password=  # Gmail에서 생성한 앱 비밀번호 16자리 입력 (공백 없이)
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.auth.code.expiration-millis=1800000

# Google Calendar API 설정
google.api.client-id= # OAuth 클라이언트 ID 입력 (예: your-client-id.apps.googleusercontent.com)
google.api.api-key= # 생성한 API 키 입력 (예: AIzaSyC-example-api-key)
google.api.scopes=https://www.googleapis.com/auth/calendar



spring.auth.email.pattern=^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$