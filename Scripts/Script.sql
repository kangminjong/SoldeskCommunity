-- SEQUENCE 생성
CREATE SEQUENCE BOARD_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE COMMENT_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE BOARD_IMAGE_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE BOARD_FILE_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE CO_COMMENT_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE DATAROOM_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE CLASS_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE VOTE_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE VOTELIST_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
CREATE SEQUENCE VERIFICATION_CODE_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;
-- 테이블 생성
CREATE TABLE "USERS" (
    "EMAIL" VARCHAR2(50) NOT NULL,
    "PASSWORD" VARCHAR2(100) NOT NULL,
    "NAME" VARCHAR2(20) NOT NULL,
    "TEL" VARCHAR2(15) NOT NULL,
    "PROFILE_IMAGE" VARCHAR2(500) NOT NULL,
    "BIRTH_DATE" DATE NOT NULL,
    "ADDRESS" VARCHAR2(100) NOT NULL,
    "CLASS_ID" NUMBER NOT NULL,
    "ROLE" CHAR(1) DEFAULT 'N' CHECK ("ROLE" IN ('Y', 'N')) NOT NULL,
    "IS_DELETED" CHAR(1) DEFAULT 'N' CHECK ("IS_DELETED" IN ('Y', 'N')) NOT NULL,
    PRIMARY KEY ("EMAIL")
);
SELECT * FROM users;
DROP TABLE BOARD CASCADE CONSTRAINTS;
SELECT * FROM BOARD_IMAGE;
SELECT * FROM BOARD_FILE;
SELECT * FROM BOARD;
INSERT INTO users VALUES('1234@naver.com', '1234', '홍길동', '010-1234-5678', '11111',  TO_DATE('1999-09-01', 'YYYY-MM-DD'), '서울시 종로구 종로', 104, 'N', 'N');
SELECT * FROM "VOTELIST";

CREATE TABLE "BOARD" (
    "BOARD_ID" NUMBER PRIMARY KEY,
    "TITLE" CLOB NOT NULL,
    "CONTENT" CLOB NOT NULL,
    "COMMENT_COUNT" NUMBER NOT NULL,
    "BOARD_DATE" DATE NOT NULL,
    "HIDE_NAME" CHAR(1) CHECK ("HIDE_NAME" IN ('Y', 'N')) NOT NULL,
    "USER_EMAIL" VARCHAR2(50) NOT NULL
);



DROP SEQUENCE BOARD_SEQ;
CREATE TABLE "COMMENTS" (
    "COMMENT_ID" NUMBER PRIMARY KEY,
    "CONTENT" CLOB NOT NULL,
    "CREATED_DATE" DATE NOT NULL,
    "UPDATED_DATE" DATE NOT NULL,
    "USER_EMAIL" VARCHAR2(50) NOT NULL,
    "BOARD_ID" NUMBER NOT NULL,
    "HIDE_NAME" CHAR(1) CHECK ("HIDE_NAME" IN ('Y', 'N')) NOT NULL,
    CONSTRAINT fk_comments_board_id FOREIGN KEY(BOARD_ID) 
	REFERENCES BOARD(BOARD_ID)
	ON DELETE CASCADE
);

DROP TABLE BOARD_IMAGE purge;

DELETE FROM BOARD_FILE;
CREATE TABLE "BOARD_IMAGE" (
    "BOARD_IMAGE_ID" NUMBER PRIMARY KEY,
    "BOARD_IMAGE_URL" VARCHAR2(500) NOT NULL,
    "BOARD_ID" NUMBER NOT NULL,
    CONSTRAINT fk_board_image_board_id
	FOREIGN KEY(BOARD_ID) 
	REFERENCES BOARD(BOARD_ID)
	ON DELETE CASCADE
);
CREATE TABLE "CO_COMMENT" (
    "CO_COMMENT_ID" NUMBER PRIMARY KEY,
    "CONTENT" CLOB NOT NULL,
    "USER_EMAIL" VARCHAR2(50) NOT NULL,
    "CREATED_DATE" DATE NOT NULL,
    "UPDATED_DATE" DATE NOT NULL,
    "HIDE_NAME" CHAR(1) CHECK ("HIDE_NAME" IN ('Y', 'N')) NOT NULL,
    "COMMENT_ID" NUMBER NOT NULL,
    "BOARD_ID" NUMBER NOT NULL,
    CONSTRAINT fk_co_comment_board_id
	FOREIGN KEY(BOARD_ID) 
	REFERENCES BOARD(BOARD_ID)
	ON DELETE CASCADE
);

CREATE TABLE "DATAROOM" (
    "DR_ID" NUMBER PRIMARY KEY,
    "TITLE" VARCHAR2(50) NOT NULL,
    "CATEGORY" CHAR(1) NOT NULL,
    "DR_FILE" VARCHAR2(500) NOT NULL,
    "CREATED_DATE" DATE NOT NULL,
    "USER_EMAIL" VARCHAR2(50) NOT NULL,
    "CLASS_ID" NUMBER NOT NULL
    
);
DROP TABLE DATAROOM  CASCADE CONSTRAINTS;
SELECT * FROM DATAROOM;
CREATE TABLE "CLASS" (
    "CLASS_ID" NUMBER PRIMARY KEY,
    "CLASS_PW" VARCHAR2(255) NOT NULL
);

CREATE TABLE "VOTE" (
    "VOTE_ID" NUMBER PRIMARY KEY,
    "CLASS_ID" NUMBER NOT NULL,
    "USER_EMAIL" VARCHAR2(50) NOT NULL, 
    "TITLE" VARCHAR2(100) NOT NULL,
    "START_DATE" DATE NOT NULL,
    "END_DATE" DATE NOT NULL,
    "MULTICHOICE" CHAR(1) CHECK ("MULTICHOICE" IN ('Y', 'N')) NOT NULL

);

CREATE TABLE "VOTELIST" (
    "VOTELIST_ID" NUMBER PRIMARY KEY,
    "VOTE_ID" NUMBER NOT NULL,
    "VOTE_TITLE" VARCHAR2(100) NOT NULL,
    "USER_EMAIL" VARCHAR2(50) NOT NULL,
    "VOTE_COUNT" NUMBER DEFAULT 0 NOT NULL,
    CONSTRAINT fk_vote_votelist
	FOREIGN KEY(VOTE_ID) 
	REFERENCES VOTE(VOTE_ID)
	ON DELETE CASCADE
);

CREATE TABLE VERIFICATION_CODE (
    VERIFICATION_CODE_ID NUMBER PRIMARY KEY,
    EMAIL VARCHAR2(50) NOT NULL,
    CODE VARCHAR2(6) NOT NULL,
    EXPIRY_TIME TIMESTAMP NOT NULL,
    CONSTRAINT FK_VERIFICATION_EMAIL FOREIGN KEY (EMAIL) REFERENCES USERS (EMAIL) ON DELETE CASCADE
);

CREATE TABLE "BOARD_FILE" (
    "BOARD_FILE_ID" NUMBER PRIMARY KEY,
    "BOARD_FILE_URL" VARCHAR2(500) NOT NULL,
    "BOARD_ID" NUMBER NOT NULL,
   	"BOARD_FILE_TITLE" VARCHAR2(500) NOT NULL,
    CONSTRAINT fk_board_file_board_id
	FOREIGN KEY(BOARD_ID) 
	REFERENCES BOARD(BOARD_ID)
	ON DELETE CASCADE
);

CREATE SEQUENCE VERIFICATION_CODE_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;

-- TRIGGER 생성
CREATE OR REPLACE TRIGGER BOARD_TRIGGER
    BEFORE INSERT ON "BOARD"
    FOR EACH ROW
BEGIN
    SELECT BOARD_SEQ.NEXTVAL
    INTO :NEW.BOARD_ID
    FROM dual;
END;

CREATE OR REPLACE TRIGGER COMMENT_TRIGGER
    BEFORE INSERT ON "COMMENT"
    FOR EACH ROW
BEGIN
    SELECT COMMENT_SEQ.NEXTVAL
    INTO :NEW.COMMENT_ID
    FROM dual;
END;

CREATE OR REPLACE TRIGGER BOARD_IMAGE_TRIGGER
    BEFORE INSERT ON "BOARD_IMAGE"
    FOR EACH ROW
BEGIN
    SELECT BOARD_IMAGE_SEQ.NEXTVAL
    INTO :NEW.BOARD_IMAGE_ID
    FROM dual;
END;

CREATE OR REPLACE TRIGGER CO_COMMENT_TRIGGER
    BEFORE INSERT ON "CO_COMMENT"
    FOR EACH ROW
BEGIN
    SELECT CO_COMMENT_SEQ.NEXTVAL
    INTO :NEW.CO_COMMENT_ID
    FROM dual;
END;

CREATE OR REPLACE TRIGGER DATAROOM_TRIGGER
    BEFORE INSERT ON "DATAROOM"
    FOR EACH ROW
BEGIN
    SELECT DATAROOM_SEQ.NEXTVAL
    INTO :NEW.DR_ID
    FROM dual;
END;

CREATE OR REPLACE TRIGGER CLASS_TRIGGER
    BEFORE INSERT ON "CLASS"
    FOR EACH ROW
BEGIN
    SELECT CLASS_SEQ.NEXTVAL
    INTO :NEW.CLASS_ID
    FROM dual;
END;

CREATE OR REPLACE TRIGGER VOTE_TRIGGER
    BEFORE INSERT ON "VOTE"
    FOR EACH ROW
BEGIN
    SELECT VOTE_SEQ.NEXTVAL
    INTO :NEW.VOTE_ID
    FROM dual;
END;

CREATE OR REPLACE TRIGGER VOTELIST_TRIGGER
    BEFORE INSERT ON "VOTELIST"
    FOR EACH ROW
BEGIN
    SELECT VOTELIST_SEQ.NEXTVAL
    INTO :NEW.VOTELIST_ID
    FROM dual;
END;